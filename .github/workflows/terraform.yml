name: 'Terraform'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  id-token: write  # Required for Workload Identity Federation

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: GCP
    defaults:
      run:
        working-directory: ./gcp-oauth-terraform
    env:
      GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
      WIF_POOL_ID: ${{ vars.WIF_POOL_ID }}
      WIF_PROVIDER_ID: ${{ vars.WIF_PROVIDER_ID }}
      TF_VAR_REGION: ${{ vars.TF_VAR_REGION || 'us-central1' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.7.0"

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
        service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'
        token_format: 'access_token'
        create_credentials_file: true
        export_environment_variables: true
        audience: '//iam.googleapis.com/projects/${{ vars.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/${{ vars.WIF_POOL_ID }}/providers/${{ vars.WIF_PROVIDER_ID }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Verify Identity
      run: gcloud auth list

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.name,
            body: output
          })

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        TF_VAR_project_id: ${{ vars.GCP_PROJECT_ID }}
        TF_VAR_region: ${{ vars.TF_VAR_REGION || 'us-central1' }}
        TF_VAR_support_email: ${{ secrets.SUPPORT_EMAIL }}
      run: terraform apply -auto-approve 